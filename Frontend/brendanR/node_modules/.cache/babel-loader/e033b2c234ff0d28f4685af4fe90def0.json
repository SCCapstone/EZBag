{"remainingRequest":"/Users/brendan/EZBag/Frontend/brendanR/node_modules/babel-loader/lib/index.js!/Users/brendan/EZBag/Frontend/brendanR/node_modules/eslint-loader/index.js??ref--13-0!/Users/brendan/EZBag/Frontend/brendanR/src/store/modules/cart.js","dependencies":[{"path":"/Users/brendan/EZBag/Frontend/brendanR/src/store/modules/cart.js","mtime":1605894335087},{"path":"/Users/brendan/EZBag/Frontend/brendanR/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brendan/EZBag/Frontend/brendanR/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brendan/EZBag/Frontend/brendanR/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/brendan/EZBag/Frontend/brendanR/src/store/modules/cart.js"],"names":["state","cart","barcode","name","price","description","businessID","quantity","getters","getCart","actions","addProduct","commit","removeProduct","setProductQuantity","amount","adjustProductQuantity","mutations","product","push","filter","getProductFromCart","find"],"mappings":"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","sourcesContent":["//import axios from 'axios';\n// this is a vuex state module, it is called by store/index.js \n\n//TODO: remove default products when no longer needed for debug\nconst state = {\n  cart: [\n    {\n      barcode: \"9780061241895\",\n      name: \"Influence, The Psychology of Persuasion\",\n      price: \"10.99\",\n      description: \"National Best Seller. By Robert B. Cialdini, PH.D.\",\n      businessID: \"1\",\n      quantity: 1,\n    },\n    {\n      barcode:\"abc\",\n      name:\"chip\",\n      price:\"5.99\",\n      description:\"good ole chips\",\n      businessID:\"1\",\n      quantity: 2,\n    }\n  ]\n};\n\nconst getters = {\n  getCart: (state) => state.cart\n};\n\n\n// https://vuex.vuejs.org/guide/actions.html#actions \nconst actions = {\n  //TODO: send event to backend\n  async addProduct({ commit }, {barcode, name, price, description, businessID}) {\n    commit('addProduct', {barcode:barcode, name:name, price:price,\n      description:description, businessID:businessID, quantity:1})\n  },\n\n  // send product-remove-event to backend and call corresponding mutation\n  async removeProduct({ commit }, {barcode}) {\n    //TODO: send product removal event to backend\n    commit('removeProduct', barcode)\n  },\n\n  // send product-quantity-change-event to backend and call corresponding mutation\n  // to set the product quantity to the given amount\n  async setProductQuantity({ commit }, {barcode, amount}) {\n    //TODO: send product-quantity-change event to backend\n    commit('setProductQuantity', {barcode:barcode, amount:amount})\n  },\n\n  // send product-qunatity-adjust-event to backend and call corresponding mutation\n  // to add the given amount to the product quantity\n  async adjustProductQuantity({ commit }, {barcode, amount}) {\n    //TODO: send product-qunatity-adjust-event to backend\n    commit('adjustProductQuantity', {barcode:barcode, amount:amount})\n\n  }\n};\n\n\n// https://vuex.vuejs.org/guide/mutations.html#mutations-must-be-synchronous\n// mutations are synchronous functions that modify client state and should only\n// be called by the above actions \nconst mutations = {\n  // add product to cart\n  //TODO: check if item exists before attempting to add product -\n  //      increment quantity if already in cart\n  addProduct (state, product) {\n    state.cart.push(product)\n  },\n\n  // remove product from cart\n  removeProduct (state, barcode) {\n    state.cart = state.cart.filter(product => product.barcode !== barcode)\n  },\n\n  // set quantity of product in cart to the provided amount\n  //TODO: check if item exists before attempting to change quantity\n  setProductQuantity (state, {barcode, amount}) {\n    getProductFromCart(state, barcode).quantity = amount\n  },\n  \n  // add the provided amount to the product in the cart\n  //TODO: check if item exists before attempting to change quantity\n  adjustProductQuantity (state, {barcode, amount}) {\n    getProductFromCart(state, barcode).quantity += amount\n  }\n};\n\n// helper functions only to be called from within this module\n\n// returns getters and setters for the given object\nfunction getProductFromCart(state, barcode){\n  // const ret = state.cart.find(product => product.barcode == barcode);\n  // console.log('>>> Searching for product in cart by barcode:')\n  // console.log(ret);\n  // return ret\n  return state.cart.find(product => product.barcode == barcode);\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}"]}]}